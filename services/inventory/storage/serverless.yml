# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: events

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
frameworkVersion: '2'

# Cannot resolve variable at "custom": Cannot resolve "live" out of "config.js": Approached a JS function resolver
# confirm it's updated to work with a new parser by setting "variablesResolutionMode: 20210326" in service config.
variablesResolutionMode: 20210326

# You're relying on provider plugin which doesn't provide a validation schema for its config. Turn off the warning here.
configValidationMode: off

# load the environment configuration from the correct fucntion in config.js which in turn loads the
# full app config from the core configuration module using the encryption key in environment variables
# to decrypt the relevant keys for this environment. Config values can be referenced in the file using ${self:custom.property_name}
custom: ${file(./config.js):${opt:stage, 'dev'}}

provider:
  name: azure
  region: SoutheastAsia
  runtime: nodejs14
  os: windows # windows is default, linux is available
  prefix: 'lcm' # prefix of generated resource name
  subscriptionId: 3139bdb9-c923-4b0b-90b2-eb3b0a31936d
  tenantId: 9a746813-041d-4abb-b73f-90acfa8d5bd0
  appId: http://azure-cli-2022-01-19-10-10-12
  stage: ${opt:stage, "live"}
  type: 'Consumption' # premium azure functions
  resourceGroup: 'lcm-${opt:stage, "live"}'
  storageAccount:
    name: lcmserverless
  environment: # these will be created as application settings
    LIVECOMMERCE: ${self:custom.environment}

plugins: # look for additional plugins in the community plugins repo: https://github.com/serverless/plugins
  - serverless-azure-functions

# you can add packaging information here
package:
  patterns:
    - '!local.settings.json'
    - '!.vscode/**'
    - '!.env'

functions:
  webhooks:
    handler: src/handlers/webhooks.process
    events:
      - http: true
        methods:
          - POST
          - GET
        authLevel: anonymous

  livestream:
    handler: src/handlers/livestream.process
    events:
      - serviceBus: true
        name: message # Specifies which name is available on `context`
        queueName: livestream # Name of the service bus queue to consume
        connection: ${self:custom.servicebusConnection}
